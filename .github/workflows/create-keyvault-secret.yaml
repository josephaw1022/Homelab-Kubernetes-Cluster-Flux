name: set-kv-secret

on:
  workflow_dispatch:
    inputs:
      secret_name:
        description: Secret name
        required: true
      secret_value:
        description: Secret value
        required: true
      update_if_exists:
        description: Update if secret already exists
        type: boolean
        required: true
        default: false

permissions:
  id-token: write
  contents: read

jobs:
  set-secret:
    runs-on: ubuntu-latest

    env:
      KV_NAME: kubesoar-homelab-67029

    steps:
      - name: Azure login (OIDC to UAMI)
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Mask secret value
        run: echo "::add-mask::${{ github.event.inputs.secret_value }}"

      - name: Create or update secret in kubesoar-homelab-67029
        shell: bash
        env:
          NAME: ${{ github.event.inputs.secret_name }}
          VALUE: ${{ github.event.inputs.secret_value }}
          UPDATE: ${{ github.event.inputs.update_if_exists }}
        run: |
          set -euo pipefail
          echo "Vault: $KV_NAME"
          echo "Secret: $NAME"

          if az keyvault secret show --vault-name "$KV_NAME" --name "$NAME" >/dev/null 2>&1; then
            if [ "$UPDATE" != "true" ]; then
              echo "Secret exists and update_if_exists=false. Skipping."
              exit 0
            fi
            echo "Secret exists. Creating new version."
          else
            echo "Secret not found. Creating."
          fi

          az keyvault secret set \
            --vault-name "$KV_NAME" \
            --name "$NAME" \
            --value "$VALUE" \
            --only-show-errors -o none

          echo "Done."
